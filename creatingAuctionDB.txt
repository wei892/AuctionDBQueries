#this is the file that keeps track of the queries used for creating the AuctionDB and related tables in MySQL


CREATE DATABASE Auction;
USE AuctionDB;

-- Users Table
CREATE TABLE Users (
    userId INT PRIMARY KEY,
    userName VARCHAR(255),
    firstName VARCHAR(255),
    lastName VARCHAR(255),
    email VARCHAR(255),
    phone VARCHAR(255)
);

-- Product Table
CREATE TABLE Product (
    productId INT PRIMARY KEY,
    productName VARCHAR(255),
    category VARCHAR(255),
    description TEXT
);

-- Auction Table
CREATE TABLE Auction (
    auctionId INT PRIMARY KEY,
    start_time DATETIME,
    end_time DATETIME,
    status ENUM('Active', 'Closed', 'Upcoming', 'Canceled')
);

-- Listing Item Table
CREATE TABLE ListingItem (
    listing_id INT PRIMARY KEY,
    start_price DECIMAL(10, 2),
    sellerId INT,
    auctionId INT,
    productId INT,
    FOREIGN KEY (sellerId) REFERENCES Users(userId),
    FOREIGN KEY (auctionId) REFERENCES Auction(auctionId),
    FOREIGN KEY (productId) REFERENCES Product(productId)
);

-- Bid Table
CREATE TABLE Bid (
    bidId INT PRIMARY KEY,
    itemId INT,
    auctionId INT,
    bidValue DECIMAL(10, 2),
    bidTime DATETIME,
    bidStatus ENUM('Accepted', 'Outbid', 'Withdrawn', 'Leading'),
    userId INT,
    FOREIGN KEY (itemId) REFERENCES ListingItem(listing_id),
    FOREIGN KEY (auctionId) REFERENCES Auction(auctionId),
    FOREIGN KEY (userId) REFERENCES Users(userId)
);

-- Payment Table
CREATE TABLE Payment (
    paymentId INT PRIMARY KEY,
    payment_amt DECIMAL(10, 2),
    payment_date DATE,
    sellerId INT,
    buyerId INT,
    itemId INT,
    FOREIGN KEY (sellerId) REFERENCES Users(userId),
    FOREIGN KEY (buyerId) REFERENCES Users(userId),
    FOREIGN KEY (itemId) REFERENCES ListingItem(listing_id)
);

-- Rating Table
CREATE TABLE Rating (
    reviewId INT PRIMARY KEY,
    reviewerId INT,
    revieweeId INT,
    reviewDate DATE,
    itemId INT,
    rating INT,
    comment TEXT,
    FOREIGN KEY (reviewerId) REFERENCES Users(userId),
    FOREIGN KEY (revieweeId) REFERENCES Users(userId),
    FOREIGN KEY (itemId) REFERENCES ListingItem(listing_id)
);

-- User Auctions Table (junction table for many-to-many relationship between Users and Auction)
CREATE TABLE UserAuctions (
    userAuctionsId INT PRIMARY KEY,
    userId INT,
    auctionId INT,
    FOREIGN KEY (userId) REFERENCES Users(userId),
    FOREIGN KEY (auctionId) REFERENCES Auction(auctionId)
);

